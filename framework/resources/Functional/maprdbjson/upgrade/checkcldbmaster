#!/bin/bash

set -x

if [[ $# -ne 2 ]]
then
  echo checkcldbmaster needs a current error count and timeout
  exit 1
fi

errors=$1
timeoutvalue=$2
echo checkcldbmaster timeout $timeoutvalue

interval=30
((end_time=${SECONDS}+$timeoutvalue))
start_time=$SECONDS
ready="0"
echo "START SECONDS", $SECONDS
count=$(kubectl get pods -n dataplatform | grep "^cldb-" | wc -l)
while ((${SECONDS} < ${end_time}))
do
  matches=0
  master=$(kubectl exec -i cldb-0 -n dataplatform -- /bin/bash -c "maprcli node cldbmaster -cluster dataplatform" 2> /tmp/null | grep -v cldbmaster | awk '{print $4}' | cut -d. -f 1)
  echo cldb-0 thinks the master is $master
  for i in $(kubectl get pods -n dataplatform | grep "^cldb-" | grep -v "^cldb-0" | awk '{print $1}')
  do
    master2=$(kubectl exec -i $i -n dataplatform -- /bin/bash -c "maprcli node cldbmaster -cluster dataplatform" 2> /tmp/null | grep -v cldbmaster | awk '{print $4}' | cut -d. -f 1)
    echo $i thinks the master is $master2
    if [[ "$master2" == "$master" ]]
    then
      ((matches++))
    else
      break
    fi
  done

  if [[ $matches -eq $(($count-1)) ]]
  then
    # each cldb reports a cldb master, and they are all the same
    ready="1"
    break
  fi

  echo "The cldbs do not report the same cldb master after " $(($SECONDS - $start_time)) " seconds"
  echo "cldb-0 thinks the cldbmaster is " $master

  sleep ${interval}
done

if [ $ready -eq "0" ]
then
  echo "The cldbs do not report the same cldb master after " $(($end_time - $start_time)) " seconds"
  echo "cldb-0 thinks the cldbmaster is " $master
  kubectl get pods -n dataplatform
  ((errors++))
  exit $errors
fi

echo "Each cldb reports a cldb master, and they are all the same"
exit $errors
